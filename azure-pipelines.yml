trigger:
  branches:
    include:
      - main
  paths:
    include:
      - '**'

variables:
  # Variable group reference
  - group: 'FoodDelivery-Secrets'
  # Pipeline variables
  - name: dockerHubUsername
    value: 'your-dockerhub-username'  # Replace with your Docker Hub username
  - name: imageRepository
    value: 'food-delivery'

pool:
  vmImage: 'ubuntu-latest'

stages:
  - stage: Build
    displayName: Build and push stage
    jobs:
      - job: Build
        displayName: Build
        steps:
          - task: Docker@2
            displayName: Build and push backend image
            inputs:
              command: buildAndPush
              containerRegistry: 'food-delivery-docker-hub'
              repository: $(dockerHubUsername)/$(imageRepository)-backend
              dockerfile: $(Build.SourcesDirectory)/backend/Dockerfile
              tags: |
                $(Build.BuildId)
                latest

          - task: Docker@2
            displayName: Build and push frontend image
            inputs:
              command: buildAndPush
              containerRegistry: 'food-delivery-docker-hub'
              repository: $(dockerHubUsername)/$(imageRepository)-frontend
              dockerfile: $(Build.SourcesDirectory)/frontend/Dockerfile
              tags: |
                $(Build.BuildId)
                latest

  - stage: Deploy
    displayName: Deploy stage
    dependsOn: Build
    condition: succeeded()
    jobs:
      - job: Deploy
        displayName: Deploy
        steps:
          - task: KubernetesManifest@0
            displayName: Deploy to Kubernetes
            inputs:
              action: 'deploy'
              kubernetesServiceConnection: 'food-delivery-k8s'
              namespace: 'food-delivery'
              manifests: |
                $(Build.SourcesDirectory)/k8s/backend-deployment.yaml
                $(Build.SourcesDirectory)/k8s/frontend-deployment.yaml
                $(Build.SourcesDirectory)/k8s/mongodb-deployment.yaml
              containers: |
                $(dockerHubUsername)/$(imageRepository)-backend:$(Build.BuildId)
                $(dockerHubUsername)/$(imageRepository)-frontend:$(Build.BuildId) 